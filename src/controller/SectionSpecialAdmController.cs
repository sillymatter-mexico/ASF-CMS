using System;
using System.Collections.Generic;
using System.Web;
using asf.cms.bll;
using asf.cms.util;
using asf.cms.model;

namespace asf.cms.controller
{
    public class SectionSpecialAdmController : Controller
    {
        public SectionSpecialAdmController(HttpContext Context) : base(Context)
        {
            isAdmin = 1;
        }

        public void List()
        {
            this.Items.Add("userType", GetCurrentUserType());
            this.Items.Add("selectedTab", "SectionSpecialAdm");
            this.Items.Add("specialSections", Section.GetSpecialSections());
            this.ShowPage("sectionSpecial/List.aspx");
        }

        public void ListPublicationBySpecial()
        {
            string type = this.Request["specialPublicationType"];

            Section s;
            if (string.IsNullOrEmpty(type) || type.ToLower() == "especiales")
                s = Section.GetById(81);//TODO: Ver por que el metodo estatico get main no funciona

            else
                s = Section.GetSpecialByType(type);
            
            List<PublicationAdminVO> pubs = Publication.ListPublicationAdmin(s.SectionId);

            GridInput gi = new GridInput();
            gi.Rows = new List<RowGrid>();
            gi.Records = s.Publications.Count;
            gi.calculaInternos();

            foreach (PublicationAdminVO pvo in pubs)
            {
                if (pvo.AutogeneratedType != null)
                {
                    //string cmd = "<a href='javascript:void(0)' onclick='deletePublication(" + pvo.Id + ");'><img src='../view/img/delete.png' alt='Eliminar' title='Eliminar'/></a>";
                    //string imgStatus = "<img src='../view/img/status" + pvo.Status + ".png' alt='" + pvo.Status + "' title='" + pvo.Status + "'/>";

                    RowGrid row = new RowGrid();
                    row.Id = pvo.Id.ToString();
                    row.Cell = new List<string>();
                    row.Cell.Add(pvo.IsMain.ToString().ToLower());
                    row.Cell.Add(pvo.Status.ToString().ToLower());
                    row.Cell.Add(pvo.Title);
                    row.Cell.Add(pvo.Section);
                    row.Cell.Add(pvo.LanguageId == 1 ? "es-MX" : "en-US");
                    row.Cell.Add(pvo.SitemapExclude.ToString().ToLower());
                    row.Cell.Add(pvo.Position.ToString());
                    //row.Cell.Add(cmd);
                    gi.Rows.Add(row);
                }
            }
            gi.calculaInternos();

            string json = gi.toJSON(false);
            ShowPage("js/default.js");
            Response.Write(json);
        }

        public void Insert()
        {
            try
            {
                Publication p = new Publication();
                p.publication.LanguageId = Language.GetCurrentLanguageId();
                p.publication.Created = DateTime.Today;
                p.publication.Updated = DateTime.Today;
                p.publication.Published = DateTime.Now;
                p.publication.Unpublished = DateTime.Now.AddYears(20);
                p.publication.IsMain = false;
                if (!string.IsNullOrEmpty(Request["parentSectionId"]))
                    p.publication.SectionId = int.Parse(Request["parentSectionId"]);
                p.publication.Title = Request["title"].Trim();
                p.publication.Permalink = Request["permalink"];
                p.publication.Position = 0;
                p.publication.Content = "";
                p.publication.Status = 2;
                p.publication.Active = true;
                p.publication.NewsTTL = 30;
                p.publication.Visitas = 0;
                p.publication.Meta = p.buildJsonAutomaticMeta();
                Publication.SetLastUpdateDate(DateTime.Today);
                p.FilesPath = uploadUrl;
                p.publication.SitemapExclude = true;
                p.publication.AutogeneratedType = Request["autogenerated_type"];
                if (p.Save())
                {
                    p.CreateDirectory();
                    this.Items.Add("publication", p.publication);
                    SendMessage("{\"error\":false,\"msg\":\"Los datos han sido guardados\",\"id\":" + p.publication.Id + "}");
                    ModificationLog.AddPublicationRegistry(ModificationType.CREATE, p.publication, GetCurrentUser());
                }
                else
                {
                    SendMessage("{\"error\":true,\"msg\":\"Los datos NO han sido guardados\"}");
                }
            }
            catch (Exception ex)
            {
                SendJSONException(ex, "Error al crear nueva publicación para sección especial.");
            }
        }

        public void Edit()
        {
            Publication p = new Publication();
            if (Request["id"] == null && Request["permalink"] != null)
            {
                string perma = Request["permalink"];
                p.publication = Publication.GetByPermalink(perma);
            }
            else
            {
                int id = int.Parse(Request["id"]);
                p.publication = Publication.GetById(id);
            }

            //Parche para permalink
            if ((string)Context.Session["permalink"] != p.publication.Permalink)
                Context.Session["permalink"] = p.publication.Permalink;
            

            SectionTree st = new SectionTree();
            SectionTreeNode stn = new SectionTreeNode();
            bool newsinclude = false;

            if (p.publication.SectionId != 0)
            {
                newsinclude = Section.GetById(p.publication.SectionId).NewsInclude;
                stn = st.getTree(p.publication.SectionId);
            }

            if (String.IsNullOrEmpty(p.publication.Meta))
                p.publication.Meta = p.buildJsonAutomaticMeta();

            this.Items.Add("sectionTreeOptions", stn.ToOptions(1));
            this.Items.Add("selectedTab", "Publication");
            this.Items.Add("sectionNewsInclude", newsinclude + "");
            this.Items.Add("publication", p.publication);
            this.Items.Add("action", "Update");

            this.ShowPage("sectionSpecial/New.aspx");
        }
    }
}