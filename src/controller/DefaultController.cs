using System;
using System.Configuration;
using System.Collections.Generic;
using System.Web;
using asf.cms.bll;
using asf.cms.model;
using asf.cms.widgets.ui;
using System.Threading;
using System.Globalization;
using log4net;

namespace asf.cms.controller
{
    public class DefaultController:Controller
    {
        public DefaultController(HttpContext context):base(context)
        {
        }
        public void SearchResult()
        {
            SectionTree st = new SectionTree();
            List<Section> superior = Section.GetSectionsByMenuKey("SUPERIOR");
            List<Section> inferior = Section.GetSectionsByMenuKey("INFERIOR");
            List<Section> principal = Section.GetSectionsByMenuKey("PRINCIPAL");
            List<Especiales> especiales = Especiales.GetByAutogeneratedType("especiales");
            List<Section> leftMenuList = new List<Section>();
            leftMenuList.AddRange(principal);
            leftMenuList.AddRange(inferior);

            Section selected = Section.GetMainSection();
            string leftMenu = st.GetLeftMenu(selected, leftMenuList);
            string leftMenuClassic = st.GetLeftMenu(selected);
            this.Items.Add("leftMenu", leftMenu);
            this.Items.Add("leftMenuClassic", leftMenuClassic);
            this.Items.Add("menuPrincipal", principal);
            this.Items.Add("menuSuperior", superior);
            this.Items.Add("menuInferior", inferior);
 
            String text = Request["q"];
 
            SiteContent sc = new SiteContent();
            List<SearchResultVO> seachRes= sc.GetSearchResults(text);
            this.Items.Add("results", seachRes);
            this.Items.Add("q", text);
            this.Items.Add("subSectionTitle", "");
            this.Items.Add("mensaje", "Resultados que coinciden con: <i>" + text + "</i>");

            // ===== Traer los banners ===== //
            List<Especiales> especialesSuperior = new List<Especiales>();
            List<Especiales> especialesLateral = new List<Especiales>();
            List<Especiales> especialesFooter = new List<Especiales>();
            List<MetaItem> especialesMeta = null;

            foreach (Especiales especial in especiales)
            {
                especialesMeta = MetaItem.ListFromJson(especial.Meta);
                if (especialesMeta.Count > 3)
                {
                    string value = MetaItem.GetBannerValue(especialesMeta);
                    if (value.ToLower().Equals("superior"))
                        especialesSuperior.Add(especial);
                    else if (value.ToLower().Equals("lateral"))
                        especialesLateral.Add(especial);
                    else if (value.ToLower().Equals("footer"))
                        especialesFooter.Add(especial);
                    else
                    {
                        especialesSuperior.Add(especial);
                        especialesLateral.Add(especial);
                    }
                }
                else
                {
                    especialesSuperior.Add(especial);
                    especialesLateral.Add(especial);
                }
            }

            this.Items.Add("bannerSuperior", especialesSuperior);
            this.Items.Add("bannerLateral", especialesLateral);
            this.Items.Add("footer", especialesFooter);
            // ============================ //

            ShowPage("Search.aspx");
        }
        public void NotFound()
        {
            try
            {
                Section selected = Section.GetMainSection();

                BuildSpecialPublications();
                BuildMenus(selected);
                BuildMeta(selected.MainPublication);

                this.Items.Add("subSectionTitle", "Pagina Principal");
                this.Items.Add("mensaje", "Pagina no encontrada, verifique");
                this.Items.Add("leftMenu", "");
                this.Items.Add("leftMenuClassic", "");

                ShowPage("Default.aspx");
            }
            catch(Exception ex)
            {
                ILog log = LogManager.GetLogger("NotFound");
                log.Error(ex.Message + ex.StackTrace + "\\n");
                if (ex.InnerException != null) log.Error(ex.InnerException.Message + ex.InnerException.StackTrace);
                Response.Write("Sitio temporalmente inactivo, favor de contactar al administrador");
               // ShowPage("");
            }
        }
        public void Index()
        {
            Section selected = Section.GetMainSection();
            selected.Visitas += 1;
            selected.UpdateViews();

            BuildMeta(selected.MainPublication);
            BuildMenus(selected);
            BuildSpecialPublications();
            BuildSpecialSections();

            int columnsLimit = int.MaxValue, eventsLimit = int.MaxValue;
            if(ConfigurationManager.AppSettings.Get("SectionColumnsLimit").ToUpper() != "MAX")
                int.TryParse(ConfigurationManager.AppSettings.Get("SectionColumnsLimit"), out columnsLimit);
            if(ConfigurationManager.AppSettings.Get("SectionEventsLimit").ToUpper() != "MAX")
                int.TryParse(ConfigurationManager.AppSettings.Get("SectionEventsLimit"), out eventsLimit);

            this.Items.Add("LimiteColumnas", columnsLimit);
            this.Items.Add("LimiteEventos", eventsLimit);
            this.Items.Add("mensaje", selected.MainPublication.Content);
            this.Items.Add("views", selected.Visitas.ToString().PadLeft(7, '0'));

            ShowPage("Default.aspx");
        }
        public void SwitchLanguage()
        {
            try
            {
                //Thread.CurrentThread.CurrentCulture = Language.GetOpositeCulture();
                Language.ChangeLanguage();
            }
            catch (Exception ex)
            { }
            Index();
            
        }
        public void GetJsonSearchableContent()
        {
            string json = SiteContent.GetJsonSearchableContent().ToString();
            ShowPage("js/default.js");
            Response.Write(json);
        }
    }
}
